<?php

namespace Proxies\__CG__\Personews\NotificationBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Devices extends \Personews\NotificationBundle\Entity\Devices implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Personews\\NotificationBundle\\Entity\\Devices' . "\0" . 'id', '' . "\0" . 'Personews\\NotificationBundle\\Entity\\Devices' . "\0" . 'idUser', '' . "\0" . 'Personews\\NotificationBundle\\Entity\\Devices' . "\0" . 'device', '' . "\0" . 'Personews\\NotificationBundle\\Entity\\Devices' . "\0" . 'ipOfDevice', '' . "\0" . 'Personews\\NotificationBundle\\Entity\\Devices' . "\0" . 'typeOfConnection', '' . "\0" . 'Personews\\NotificationBundle\\Entity\\Devices' . "\0" . 'cpu', '' . "\0" . 'Personews\\NotificationBundle\\Entity\\Devices' . "\0" . 'internet', '' . "\0" . 'Personews\\NotificationBundle\\Entity\\Devices' . "\0" . 'batterie', '' . "\0" . 'Personews\\NotificationBundle\\Entity\\Devices' . "\0" . 'dateOfLastConnection');
        }

        return array('__isInitialized__', '' . "\0" . 'Personews\\NotificationBundle\\Entity\\Devices' . "\0" . 'id', '' . "\0" . 'Personews\\NotificationBundle\\Entity\\Devices' . "\0" . 'idUser', '' . "\0" . 'Personews\\NotificationBundle\\Entity\\Devices' . "\0" . 'device', '' . "\0" . 'Personews\\NotificationBundle\\Entity\\Devices' . "\0" . 'ipOfDevice', '' . "\0" . 'Personews\\NotificationBundle\\Entity\\Devices' . "\0" . 'typeOfConnection', '' . "\0" . 'Personews\\NotificationBundle\\Entity\\Devices' . "\0" . 'cpu', '' . "\0" . 'Personews\\NotificationBundle\\Entity\\Devices' . "\0" . 'internet', '' . "\0" . 'Personews\\NotificationBundle\\Entity\\Devices' . "\0" . 'batterie', '' . "\0" . 'Personews\\NotificationBundle\\Entity\\Devices' . "\0" . 'dateOfLastConnection');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Devices $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdUser($idUser)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdUser', array($idUser));

        return parent::setIdUser($idUser);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdUser', array());

        return parent::getIdUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setDevice($device)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDevice', array($device));

        return parent::setDevice($device);
    }

    /**
     * {@inheritDoc}
     */
    public function getDevice()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDevice', array());

        return parent::getDevice();
    }

    /**
     * {@inheritDoc}
     */
    public function setIpOfDevice($ipOfDevice)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIpOfDevice', array($ipOfDevice));

        return parent::setIpOfDevice($ipOfDevice);
    }

    /**
     * {@inheritDoc}
     */
    public function getIpOfDevice()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIpOfDevice', array());

        return parent::getIpOfDevice();
    }

    /**
     * {@inheritDoc}
     */
    public function setTypeOfConnection($typeOfConnection)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTypeOfConnection', array($typeOfConnection));

        return parent::setTypeOfConnection($typeOfConnection);
    }

    /**
     * {@inheritDoc}
     */
    public function getTypeOfConnection()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTypeOfConnection', array());

        return parent::getTypeOfConnection();
    }

    /**
     * {@inheritDoc}
     */
    public function setCpu($cpu)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCpu', array($cpu));

        return parent::setCpu($cpu);
    }

    /**
     * {@inheritDoc}
     */
    public function getCpu()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCpu', array());

        return parent::getCpu();
    }

    /**
     * {@inheritDoc}
     */
    public function setInternet($internet)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInternet', array($internet));

        return parent::setInternet($internet);
    }

    /**
     * {@inheritDoc}
     */
    public function getInternet()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInternet', array());

        return parent::getInternet();
    }

    /**
     * {@inheritDoc}
     */
    public function setBatterie($batterie)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBatterie', array($batterie));

        return parent::setBatterie($batterie);
    }

    /**
     * {@inheritDoc}
     */
    public function getBatterie()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBatterie', array());

        return parent::getBatterie();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateOfLastConnection($dateOfLastConnection)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateOfLastConnection', array($dateOfLastConnection));

        return parent::setDateOfLastConnection($dateOfLastConnection);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateOfLastConnection()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateOfLastConnection', array());

        return parent::getDateOfLastConnection();
    }

}
